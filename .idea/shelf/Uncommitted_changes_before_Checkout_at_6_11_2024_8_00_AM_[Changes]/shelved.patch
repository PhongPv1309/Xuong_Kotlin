Index: app/src/main/java/com/example/kotlin_su24_group5/Menu.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kotlin_su24_group5\r\n\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.NavigationBar\r\nimport androidx.compose.material3.NavigationBarItem\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.mutableIntStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.runtime.setValue\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.ColorFilter\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\n\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.example.kotlin_su24_group5.ui.theme.Kotlin_SU24_Group5Theme\r\n\r\n\r\nclass Menu : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            Kotlin_SU24_Group5Theme {\r\n                Surface(\r\n                    modifier = Modifier.fillMaxSize(),\r\n                    color = MaterialTheme.colorScheme.onBackground\r\n                ) {\r\n                    val navController = rememberNavController()\r\n                    Scaffold(\r\n                        modifier = Modifier.background(Color.Black)\r\n                            .fillMaxWidth(),\r\n                        bottomBar = {\r\n                            BottomNav( navController = navController)\r\n\r\n                        }\r\n                    ) {\r\n                        it\r\n                        MyNavHost(\r\n                            navHostController = navController,\r\n                            startDestination = Screens.Home.route\r\n\r\n                        )\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    @Preview(showBackground = true)\r\n    @Composable\r\n    fun GreetingPreview() {\r\n        BottomNav(navController = NavHostController(this))\r\n    }\r\n\r\n}\r\n@Composable\r\nfun BottomNav(\r\n\r\n    navController: NavHostController,\r\n) {\r\n    var selectedIndex by remember {\r\n\r\n        mutableIntStateOf(0)\r\n    }\r\n    val list = listOf(\r\n        Screens.Home,\r\n        Screens.Favorite,\r\n        Screens.Thongbao,\r\n        Screens.User,\r\n        )\r\n    NavigationBar(\r\n        modifier = Modifier.background(Color.Black)\r\n\r\n    ) {\r\n        list.forEachIndexed { index, screens ->\r\n            NavigationBarItem(\r\n//                modifier = Modifier.background(Color.White),\r\n                selected = selectedIndex == index,\r\n                onClick = {\r\n                    navController.navigate(screens.route)\r\n                    selectedIndex = index\r\n                },\r\n\r\n                icon = {\r\n                    Icon( imageVector = screens.imageVector,\r\n                        contentDescription = \"\",\r\n                        tint = Color.Black)\r\n                },\r\n                label = {\r\n                    Text(text = screens.label, color = Color.Black)\r\n\r\n                },\r\n                alwaysShowLabel = false\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/Menu.kt b/app/src/main/java/com/example/kotlin_su24_group5/Menu.kt
--- a/app/src/main/java/com/example/kotlin_su24_group5/Menu.kt	
+++ b/app/src/main/java/com/example/kotlin_su24_group5/Menu.kt	
@@ -39,7 +39,8 @@
         setContent {
             Kotlin_SU24_Group5Theme {
                 Surface(
-                    modifier = Modifier.fillMaxSize(),
+                    modifier = Modifier.fillMaxSize()
+                        .background(color = Color.Black),
                     color = MaterialTheme.colorScheme.onBackground
                 ) {
                     val navController = rememberNavController()
@@ -73,7 +74,6 @@
 }
 @Composable
 fun BottomNav(
-
     navController: NavHostController,
 ) {
     var selectedIndex by remember {
@@ -85,14 +85,20 @@
         Screens.Favorite,
         Screens.Thongbao,
         Screens.User,
-        )
+    )
     NavigationBar(
-        modifier = Modifier.background(Color.Black)
+        modifier = Modifier.background(Color.Black),
+        Color.Transparent
+
+
 
     ) {
         list.forEachIndexed { index, screens ->
             NavigationBarItem(
-//                modifier = Modifier.background(Color.White),
+                modifier = Modifier
+                    .fillMaxSize()
+                    .background(Color.Black),
+
                 selected = selectedIndex == index,
                 onClick = {
                     navController.navigate(screens.route)
@@ -102,10 +108,10 @@
                 icon = {
                     Icon( imageVector = screens.imageVector,
                         contentDescription = "",
-                        tint = Color.Black)
+                        tint = Color.White)
                 },
                 label = {
-                    Text(text = screens.label, color = Color.Black)
+                    Text(text = screens.label, color = Color.White)
 
                 },
                 alwaysShowLabel = false
@@ -115,9 +121,4 @@
     }
 
 
-}
-
-
-
-
-
+}
\ No newline at end of file
Index: app/src/main/java/com/example/kotlin_su24_group5/ManagerAdmin.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kotlin_su24_group5\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.core.graphics.toColorInt\r\nimport androidx.core.view.ViewCompat\r\nimport androidx.core.view.WindowInsetsCompat\r\n\r\nclass ManagerAdmin : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n        getLayoutManagerAD()\r\n        }\r\n    }\r\n\r\n\r\n}\r\n@Preview\r\n@Composable\r\nfun getLayoutManagerAD(){\r\n    Box (modifier = Modifier\r\n        .background(color = Color(\"#252121\".toColorInt()))\r\n        .fillMaxHeight()){\r\n        LazyColumn (\r\n        ){\r\n            item { getHeaderDetail() }\r\n            item { getContentMnAdmin() }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n@Composable\r\nfun getContentMnAdmin(){\r\n    Column (\r\n        modifier = Modifier\r\n            .background(color = Color(\"#252121\".toColorInt()))\r\n\r\n    ) {\r\n        getKC()\r\n        getLoaiAdmin()\r\n        getMonAnAdmin()\r\n\r\n    }\r\n    }\r\n@Composable\r\nfun getLoaiAdmin(){\r\n    Row(\r\n        verticalAlignment = Alignment.CenterVertically,\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .background(color = Color(\"#252121\".toColorInt()))\r\n            .height(100.dp)\r\n\r\n\r\n    ) {\r\n        Image(painter = painterResource(id = R.drawable.logospl),\r\n            contentDescription = \"logo\",\r\n            modifier = Modifier\r\n                .size(60.dp)\r\n                .padding(start = 10.dp)\r\n        )\r\n        Text(text = \"Quản Lý Loại Món Ăn\",\r\n            style = TextStyle(\r\n                color = Color(\"#FFFFFF\".toColorInt()),\r\n                fontSize = 18.sp,\r\n                lineHeight = 22.sp,\r\n\r\n                ),\r\n            modifier = Modifier.padding(start = 15.dp)\r\n        )\r\n    }\r\n}\r\n@Composable\r\nfun getMonAnAdmin(){\r\n    Row(\r\n        verticalAlignment = Alignment.CenterVertically,\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .background(color = Color(\"#252121\".toColorInt()))\r\n            .height(100.dp)\r\n\r\n\r\n    ) {\r\n        Image(painter = painterResource(id = R.drawable.logospl),\r\n            contentDescription = \"logo\",\r\n            modifier = Modifier\r\n                .size(60.dp)\r\n                .padding(start = 10.dp)\r\n        )\r\n        Text(text = \"Quản Lý Món Ăn\",\r\n            style = TextStyle(\r\n                color = Color(\"#FFFFFF\".toColorInt()),\r\n                fontSize = 18.sp,\r\n                lineHeight = 22.sp,\r\n\r\n                ),\r\n            modifier = Modifier.padding(start = 15.dp)\r\n        )\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/ManagerAdmin.kt b/app/src/main/java/com/example/kotlin_su24_group5/ManagerAdmin.kt
--- a/app/src/main/java/com/example/kotlin_su24_group5/ManagerAdmin.kt	
+++ b/app/src/main/java/com/example/kotlin_su24_group5/ManagerAdmin.kt	
@@ -1,5 +1,7 @@
 package com.example.kotlin_su24_group5
 
+import android.content.Context
+import android.content.Intent
 import android.os.Bundle
 import androidx.activity.ComponentActivity
 import androidx.activity.compose.setContent
@@ -7,6 +9,7 @@
 import androidx.appcompat.app.AppCompatActivity
 import androidx.compose.foundation.Image
 import androidx.compose.foundation.background
+import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.Box
 import androidx.compose.foundation.layout.Column
 import androidx.compose.foundation.layout.Row
@@ -21,6 +24,7 @@
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.text.TextStyle
 import androidx.compose.ui.tooling.preview.Preview
@@ -29,12 +33,13 @@
 import androidx.core.graphics.toColorInt
 import androidx.core.view.ViewCompat
 import androidx.core.view.WindowInsetsCompat
+import com.example.kotlin_su24_group5.Dish.ListDish
 
 class ManagerAdmin : ComponentActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContent {
-        getLayoutManagerAD()
+            getLayoutManagerAD()
         }
     }
 
@@ -67,15 +72,17 @@
         getMonAnAdmin()
 
     }
-    }
+}
 @Composable
 fun getLoaiAdmin(){
+    val context = LocalContext.current
     Row(
         verticalAlignment = Alignment.CenterVertically,
         modifier = Modifier
             .fillMaxWidth()
             .background(color = Color("#252121".toColorInt()))
             .height(100.dp)
+            .clickable { navLoaiMon(context) }
 
 
     ) {
@@ -98,13 +105,14 @@
 }
 @Composable
 fun getMonAnAdmin(){
+    val context = LocalContext.current
     Row(
         verticalAlignment = Alignment.CenterVertically,
         modifier = Modifier
             .fillMaxWidth()
             .background(color = Color("#252121".toColorInt()))
             .height(100.dp)
-
+            .clickable { navMonAn(context) }
 
     ) {
         Image(painter = painterResource(id = R.drawable.logospl),
@@ -123,4 +131,12 @@
             modifier = Modifier.padding(start = 15.dp)
         )
     }
+}
+fun navLoaiMon(context: Context) {
+    val intent = Intent(context, QLLoaiMonScreen::class.java)
+    context.startActivity(intent)
+}
+fun navMonAn(context: Context){
+    val intent = Intent(context, ListDish::class.java)
+    context.startActivity(intent)
 }
\ No newline at end of file
Index: app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kotlin_su24_group5\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.rounded.AccountCircle\r\nimport androidx.compose.material.icons.rounded.DateRange\r\nimport androidx.compose.material.icons.rounded.Favorite\r\nimport androidx.compose.material.icons.rounded.FavoriteBorder\r\nimport androidx.compose.material.icons.rounded.Home\r\nimport androidx.compose.material.icons.rounded.Notifications\r\nimport androidx.compose.material.icons.rounded.ShoppingCart\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.graphics.vector.ImageVector\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\n\r\n\r\n@Composable\r\nfun MyNavHost(\r\n    navHostController: NavHostController,\r\n    startDestination: String,\r\n) {\r\n\r\n\r\n\r\n    val login=Login()\r\n\r\n    NavHost(navController = navHostController,\r\n        startDestination = startDestination,\r\n        modifier = Modifier.background(Color.Black),\r\n        builder = {\r\n\r\n            composable(NavCons.home) {\r\n                getLayoutHome()\r\n            }\r\n            composable(NavCons.favorite) {\r\n\r\n\r\n\r\n            }\r\n            composable(NavCons.thongbao) {\r\n                getLayoutManagerAD()\r\n\r\n            }\r\n            composable(NavCons.user) {\r\n                getLayoutSupport()\r\n\r\n            }\r\n\r\n\r\n        })\r\n\r\n}\r\n\r\nsealed class Screens(val route: String, val imageVector: ImageVector, val label: String) {\r\n    object Home : Screens(\r\n        route = NavCons.home,\r\n        label = \"Trang Chủ\",\r\n        imageVector = Icons.Rounded.Home\r\n    )\r\n\r\n    object Favorite : Screens(\r\n        route = NavCons.favorite,\r\n        label = \"Thống Kê\",\r\n        imageVector = Icons.Rounded.ShoppingCart\r\n    )\r\n    object Thongbao : Screens(\r\n        route = NavCons.thongbao,\r\n        label = \"Quản Lý\",\r\n        imageVector = Icons.Rounded.DateRange\r\n    )\r\n    object User : Screens(\r\n        route = NavCons.user,\r\n        label = \"Hỗ Trợ\",\r\n        imageVector = Icons.Rounded.AccountCircle\r\n    )\r\n\r\n\r\n}\r\n\r\nobject NavCons {\r\n    const val home = \"Trang Chủ\"\r\n    const val favorite = \"Thống Kê\"\r\n    const val thongbao = \"Quản Lý \"\r\n    const val user = \"Hỗ Trợ\"\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt b/app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt
--- a/app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt	
+++ b/app/src/main/java/com/example/kotlin_su24_group5/MyNavHost.kt	
@@ -34,7 +34,7 @@
         builder = {
 
             composable(NavCons.home) {
-                getLayoutHome()
+                HomeScreen(navigationController = navHostController)
             }
             composable(NavCons.favorite) {
 
@@ -87,4 +87,4 @@
     const val thongbao = "Quản Lý "
     const val user = "Hỗ Trợ"
 
-}
+}
\ No newline at end of file
Index: app/src/main/java/com/example/kotlin_su24_group5/HomeAdmin.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.kotlin_su24_group5\r\n\r\nimport android.media.Image\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\n\r\nimport androidx.compose.foundation.Image\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.PaddingValues\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxHeight\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Menu\r\nimport androidx.compose.material3.Button\r\nimport androidx.compose.material3.ButtonDefaults\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.RadioButton\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Shapes\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.material3.TopAppBarDefaults\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.res.painterResource\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.text.style.TextAlign\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.core.graphics.toColorInt\r\n\r\nclass HomeAdmin : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContent{\r\n            getLayoutHome()\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun getLayoutHome(){\r\n    Column {\r\n        getHeaderHome()\r\n        GetLayout()\r\n    }\r\n}\r\n@Composable\r\nfun GetLayout( title: String = \"Cưm tứm đim\", innerPadding: PaddingValues = PaddingValues(0.dp)) {\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .fillMaxHeight()\r\n            .background(color = Color.Black)\r\n            .padding(\r\n                top = innerPadding.calculateTopPadding() + 10.dp,\r\n                start = 10.dp,\r\n                end = 10.dp,\r\n                bottom = 10.dp,\r\n            )\r\n        ,\r\n        horizontalAlignment = Alignment.CenterHorizontally,\r\n        verticalArrangement = Arrangement.spacedBy(10.dp)\r\n    ){\r\n\r\n        Greeting1(name = \"Today : 19-05-2024 \")\r\n        Greeting2(name = \"Số lượng đơn : 2\")\r\n        Greeting3(name = \"Doanh thu : 232,000đ\" )\r\n        GetRowItem()\r\n        GetRowItem()\r\n        GetRowItem()\r\n        GetRowItem()\r\n        GetRowItem()\r\n        GetRowItem()\r\n\r\n//        SimpleButton()\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n@Composable\r\nfun GetRowItem(){\r\n    Row(\r\n        modifier = Modifier\r\n            .fillMaxWidth()\r\n            .background(color = Color.DarkGray, shape = RoundedCornerShape((12.dp)))\r\n            .height(70.dp)\r\n            .padding(5.dp),\r\n        verticalAlignment = Alignment.CenterVertically,\r\n\r\n        ){\r\n//        Image(painter = painterResource(id = idRes), contentDescription =\"\" , modifier = Modifier.width(60.dp))\r\n//        Text(\r\n//            text = title,\r\n//            modifier = Modifier\r\n//                .weight(1f)\r\n//                .padding(50.dp, 0.dp, 0.dp, 0.dp),\r\n//            color = Color.White,\r\n//\r\n//            )\r\n\r\n    }\r\n}\r\n\r\n@Composable\r\nfun GetTextTitle(msg: String , innerPadding: PaddingValues = PaddingValues(0.dp)) {\r\n    Text(\r\n        text = msg,\r\n        modifier = Modifier\r\n            .padding(0.dp, 20.dp)\r\n            .fillMaxWidth(),\r\n        color = Color.White,\r\n        fontSize = 20.sp,\r\n        fontWeight = FontWeight.Bold,\r\n        textAlign = TextAlign.Center,\r\n\r\n        )\r\n}\r\n\r\n@Composable\r\nfun GetImage(idRes: Int= R.drawable.zalo, innerPadding: PaddingValues = PaddingValues(0.dp)) {\r\n    Image(painter = painterResource(id = idRes), contentDescription =\"\" , modifier = Modifier.width(60.dp))\r\n}\r\n@Composable\r\nfun getHeaderHome() {\r\n    Box(\r\n        modifier = Modifier.fillMaxWidth()\r\n            .background(color = Color.DarkGray)\r\n    ) {\r\n        Row(\r\n            verticalAlignment = Alignment.CenterVertically,  // Align items vertically centered in the Row\r\n            modifier = Modifier\r\n                .fillMaxWidth()\r\n                .padding(top = 20.dp, start = 15.dp, end = 30.dp, bottom = 10.dp) // Added end padding\r\n        ) {\r\n            Image(\r\n                painter = painterResource(id = R.drawable.img),\r\n                contentDescription = \"Search Icon\",\r\n                modifier = Modifier\r\n                    .width(44.dp)\r\n                    .height(44.dp)\r\n            )\r\n            Spacer(modifier = Modifier.width(8.dp)) // Space between Image and Column\r\n            Column(\r\n                modifier = Modifier.weight(1f) // Column takes up the remaining space\r\n            ) {\r\n                Text(\r\n                    text = \"Cưm tứm đim\",\r\n                    style = TextStyle(\r\n//                        fontFamily = customFontFamily,\r\n                        fontSize = 28.sp,\r\n                        color = Color.White,\r\n                        lineHeight = 45.sp,\r\n\r\n                        ),\r\n                    modifier = Modifier.padding() // Center horizontally within Column\r\n                )\r\n//                Text(\r\n//                    text = \"BEAUTIFUL\",\r\n//                    style = TextStyle(\r\n////                        fontFamily = customFontFamily,\r\n//                        fontSize = 18.sp,\r\n//                        color = Color(\"#303030\".toColorInt()),\r\n//                        lineHeight = 45.sp\r\n//                    ),\r\n//                    modifier = Modifier.align(Alignment.CenterHorizontally) // Center horizontally within Column\r\n//                )\r\n            }\r\n            Spacer(modifier = Modifier.width(8.dp)) // Space between Column and new Image\r\n            Image(\r\n                painter = painterResource(id = R.drawable.bell), // Replace with your image resource\r\n                contentDescription = \"New Image\",\r\n                modifier = Modifier\r\n                    .width(24.dp)\r\n                    .height(24.dp)\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@Composable\r\nfun Greeting1(name: String) {\r\n    Text(\r\n        text = \" $name\",\r\n        modifier = Modifier\r\n            .padding(\r\n\r\n                start = 10.dp,\r\n                end = 10.dp,\r\n                bottom = 0.dp\r\n            )\r\n            .fillMaxWidth(),\r\n\r\n        color = Color.LightGray,\r\n        fontSize = 20.sp,\r\n        fontWeight = FontWeight.Bold,\r\n        textAlign = TextAlign.Center,\r\n\r\n\r\n        )\r\n}\r\n@Composable\r\nfun Greeting2(name: String) {\r\n    Text(\r\n        text = \" $name\",\r\n        modifier = Modifier\r\n            .padding(\r\n                start = 10.dp,\r\n                end = 10.dp,\r\n            )\r\n            .fillMaxWidth(),\r\n\r\n        color = Color.LightGray,\r\n        fontSize = 20.sp,\r\n        fontWeight = FontWeight.Bold,\r\n        textAlign = TextAlign.Center,\r\n\r\n        )\r\n}\r\n\r\n@Composable\r\nfun Greeting3(name: String) {\r\n    Text(\r\n        text = \" $name\",\r\n        modifier = Modifier\r\n            .padding(\r\n                start = 10.dp,\r\n                end = 10.dp,\r\n                bottom = 40.dp,)\r\n            .fillMaxWidth(),\r\n\r\n        color = Color.LightGray,\r\n        fontSize = 20.sp,\r\n        fontWeight = FontWeight.Bold,\r\n        textAlign = TextAlign.Center,\r\n\r\n        )\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/kotlin_su24_group5/HomeAdmin.kt b/app/src/main/java/com/example/kotlin_su24_group5/HomeAdmin.kt
--- a/app/src/main/java/com/example/kotlin_su24_group5/HomeAdmin.kt	
+++ b/app/src/main/java/com/example/kotlin_su24_group5/HomeAdmin.kt	
@@ -1,264 +1,173 @@
 package com.example.kotlin_su24_group5
-
-import android.media.Image
-import android.os.Bundle
-import androidx.activity.ComponentActivity
-import androidx.activity.compose.setContent
-import androidx.activity.enableEdgeToEdge
-
-import androidx.compose.foundation.Image
+import android.content.Context
+import android.content.Intent
 import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.Arrangement
-import androidx.compose.foundation.layout.Box
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.PaddingValues
-import androidx.compose.foundation.layout.Row
-import androidx.compose.foundation.layout.Spacer
-import androidx.compose.foundation.layout.fillMaxHeight
-import androidx.compose.foundation.layout.fillMaxSize
-import androidx.compose.foundation.layout.fillMaxWidth
-import androidx.compose.foundation.layout.height
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.layout.width
+import androidx.compose.foundation.clickable
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.lazy.LazyColumn
+import androidx.compose.foundation.lazy.items
 import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Menu
-import androidx.compose.material3.Button
-import androidx.compose.material3.ButtonDefaults
-import androidx.compose.material3.ExperimentalMaterial3Api
-import androidx.compose.material3.Icon
-import androidx.compose.material3.IconButton
+import androidx.compose.material3.Card
+import androidx.compose.material3.CardDefaults
 import androidx.compose.material3.MaterialTheme
-import androidx.compose.material3.RadioButton
-import androidx.compose.material3.Scaffold
-import androidx.compose.material3.Shapes
 import androidx.compose.material3.Text
-import androidx.compose.material3.TopAppBar
-import androidx.compose.material3.TopAppBarDefaults
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.TextStyle
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.core.graphics.toColorInt
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.rememberNavController
+import com.example.kotlin_su24_group5.Dish.ListDish
 
-class HomeAdmin : ComponentActivity() {
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        enableEdgeToEdge()
-        setContent{
-            getLayoutHome()
-        }
 
-    }
-}
 
+data class ListItem(val title: String, val description: String, val price:String)
 
-@Preview(showBackground = true)
-@Composable
-fun getLayoutHome(){
-    Column {
-        getHeaderHome()
-        GetLayout()
-    }
-}
 @Composable
-fun GetLayout( title: String = "Cưm tứm đim", innerPadding: PaddingValues = PaddingValues(0.dp)) {
-    Column(
-        modifier = Modifier
-            .fillMaxWidth()
-            .fillMaxHeight()
-            .background(color = Color.Black)
-            .padding(
-                top = innerPadding.calculateTopPadding() + 10.dp,
-                start = 10.dp,
-                end = 10.dp,
-                bottom = 10.dp,
-            )
-        ,
+fun HomeScreen(navigationController: NavHostController) {
+
+    // Danh sách các mục để hiển thị
+    val itemsList = listOf(
+        ListItem("Đơn hàng CT1E22E", "Từ chối", "100.000 đ"),
+        ListItem("Đơn hàng CT2E2206", "Chấp nhận", "500.000 đ"),
+        ListItem("Đơn hàng CT3E23E", "Chấp nhận", "100.800 đ"),
+        ListItem("Đơn hàng CT4E12E", "Từ chối", "101.854 đ"),
+        ListItem("Đơn hàng CT5E12E", "Chấp nhận", "103.454 đ"),
+        ListItem("Đơn hàng CT6E12E", "Từ chối", "201.354 đ"),
+        ListItem("Đơn hàng CT7E12E", "Chấp nhận", "301.8423 đ"),
+        ListItem("Đơn hàng CT8E12E", "Từ chối", "2301.42 đ"),
+        ListItem("Đơn hàng CT9E12E", "Từ chối", "3301.423 đ"),
+        ListItem("Đơn hàng CT10E12E", "Chấp nhận", "4501.123 đ"),
+        )
+
+    // Sử dụng LazyColumn để hiển thị danh sách
+
+    Column(  modifier = Modifier.
+    fillMaxSize().
+    padding(top = 10.dp).
+    background(Color(0xff252121)),
         horizontalAlignment = Alignment.CenterHorizontally,
-        verticalArrangement = Arrangement.spacedBy(10.dp)
-    ){
+        verticalArrangement = Arrangement.Center
+    ) {
+        Text(
+            text = "Today:6-8-2024 ",
+            style = MaterialTheme.typography.titleMedium,
+            color = Color.White,
+            modifier = Modifier.padding(top = 16.dp)
 
-        Greeting1(name = "Today : 19-05-2024 ")
-        Greeting2(name = "Số lượng đơn : 2")
-        Greeting3(name = "Doanh thu : 232,000đ" )
-        GetRowItem()
-        GetRowItem()
-        GetRowItem()
-        GetRowItem()
-        GetRowItem()
-        GetRowItem()
+        )
 
-//        SimpleButton()
-    }
+        Text(
+            text = "Số lượng đơn: 12",
+            style = MaterialTheme.typography.titleMedium,
+            color = Color.White,
+        )
 
 
+        Text(
+            text = "Doanh thu: 123.456.789 $",
+            style = MaterialTheme.typography.titleMedium,
+            color = Color.White,
+        )
 
-}
 
-@Composable
-fun GetRowItem(){
-    Row(
-        modifier = Modifier
-            .fillMaxWidth()
-            .background(color = Color.DarkGray, shape = RoundedCornerShape((12.dp)))
-            .height(70.dp)
-            .padding(5.dp),
-        verticalAlignment = Alignment.CenterVertically,
+        LazyColumn(
+            modifier = Modifier
+                .padding(top = 7.dp, start = 16.dp, end = 16.dp)
+                .fillMaxSize()
+                .background(Color(0xff252121))
+        )
+        {
+            items(itemsList) { item ->
+                ListItemView(item = item, navigationController = navigationController)
+            }
+        }
+    }
 
-        ){
-//        Image(painter = painterResource(id = idRes), contentDescription ="" , modifier = Modifier.width(60.dp))
-//        Text(
-//            text = title,
-//            modifier = Modifier
-//                .weight(1f)
-//                .padding(50.dp, 0.dp, 0.dp, 0.dp),
-//            color = Color.White,
-//
-//            )
 
-    }
 }
 
 @Composable
-fun GetTextTitle(msg: String , innerPadding: PaddingValues = PaddingValues(0.dp)) {
-    Text(
-        text = msg,
+fun ListItemView(item: ListItem,navigationController: NavHostController) {
+    val context = LocalContext.current
+    Card(
+        shape = RoundedCornerShape(8.dp),
         modifier = Modifier
-            .padding(0.dp, 20.dp)
+            .padding( top = 10.dp)
+
+            .height(110.dp)
             .fillMaxWidth(),
-        color = Color.White,
-        fontSize = 20.sp,
-        fontWeight = FontWeight.Bold,
-        textAlign = TextAlign.Center,
-
-        )
-}
-
-@Composable
-fun GetImage(idRes: Int= R.drawable.zalo, innerPadding: PaddingValues = PaddingValues(0.dp)) {
-    Image(painter = painterResource(id = idRes), contentDescription ="" , modifier = Modifier.width(60.dp))
-}
-@Composable
-fun getHeaderHome() {
-    Box(
-        modifier = Modifier.fillMaxWidth()
-            .background(color = Color.DarkGray)
-    ) {
-        Row(
-            verticalAlignment = Alignment.CenterVertically,  // Align items vertically centered in the Row
-            modifier = Modifier
-                .fillMaxWidth()
-                .padding(top = 20.dp, start = 15.dp, end = 30.dp, bottom = 10.dp) // Added end padding
-        ) {
-            Image(
-                painter = painterResource(id = R.drawable.img),
-                contentDescription = "Search Icon",
-                modifier = Modifier
-                    .width(44.dp)
-                    .height(44.dp)
-            )
-            Spacer(modifier = Modifier.width(8.dp)) // Space between Image and Column
-            Column(
-                modifier = Modifier.weight(1f) // Column takes up the remaining space
-            ) {
-                Text(
-                    text = "Cưm tứm đim",
-                    style = TextStyle(
-//                        fontFamily = customFontFamily,
-                        fontSize = 28.sp,
+        elevation = CardDefaults.cardElevation(defaultElevation = 4.dp) ,
+//        colors = CardDefaults.cardColors(containerColor = Color(0x2F2D2D))
+    ) {
+        Box(
+            modifier = Modifier
+                .fillMaxSize()
+                .background(Color.DarkGray) // Màu nền của Card
+
+        ) {
+            Column(
+                modifier = Modifier
+                    .padding(16.dp)
+            ) {
+                Row(
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .padding(top = 15.dp),
+                    horizontalArrangement = Arrangement.SpaceBetween
+                ) {
+                    Text(
+                        text = item.title,
+                        style = MaterialTheme.typography.titleMedium,
                         color = Color.White,
-                        lineHeight = 45.sp,
-
-                        ),
-                    modifier = Modifier.padding() // Center horizontally within Column
-                )
-//                Text(
-//                    text = "BEAUTIFUL",
-//                    style = TextStyle(
-////                        fontFamily = customFontFamily,
-//                        fontSize = 18.sp,
-//                        color = Color("#303030".toColorInt()),
-//                        lineHeight = 45.sp
-//                    ),
-//                    modifier = Modifier.align(Alignment.CenterHorizontally) // Center horizontally within Column
-//                )
-            }
-            Spacer(modifier = Modifier.width(8.dp)) // Space between Column and new Image
-            Image(
-                painter = painterResource(id = R.drawable.bell), // Replace with your image resource
-                contentDescription = "New Image",
-                modifier = Modifier
-                    .width(24.dp)
-                    .height(24.dp)
-            )
-        }
-    }
-
-}
-
-@Composable
-fun Greeting1(name: String) {
-    Text(
-        text = " $name",
-        modifier = Modifier
-            .padding(
-
-                start = 10.dp,
-                end = 10.dp,
-                bottom = 0.dp
-            )
-            .fillMaxWidth(),
-
-        color = Color.LightGray,
-        fontSize = 20.sp,
-        fontWeight = FontWeight.Bold,
-        textAlign = TextAlign.Center,
-
-
-        )
-}
-@Composable
-fun Greeting2(name: String) {
-    Text(
-        text = " $name",
-        modifier = Modifier
-            .padding(
-                start = 10.dp,
-                end = 10.dp,
-            )
-            .fillMaxWidth(),
-
-        color = Color.LightGray,
-        fontSize = 20.sp,
-        fontWeight = FontWeight.Bold,
-        textAlign = TextAlign.Center,
-
-        )
+                    )
+                    Text(
+                        text = "||",
+                        style = MaterialTheme.typography.titleLarge,
+                        color = Color.White,
+                        modifier = Modifier
+                            .padding(start = 20.dp)
+                            .clickable {
+                                navDonHang(context)
+                            }
+                    )
+                    Text(
+                        text = item.price,
+                        style = MaterialTheme.typography.titleMedium,
+                        color = Color.White,
+                        modifier = Modifier.padding(end = 10.dp, bottom = 10.dp)
+                    )
+                }
+                Row(
+                    modifier = Modifier.fillMaxWidth(),
+                    horizontalArrangement = Arrangement.SpaceBetween
+                ) {
+                    Text(
+                        text = "Trạng Thái",
+                        style = MaterialTheme.typography.titleMedium,
+                        color = Color.White,
+                    )
+                    Text(
+                        text = item.description,
+                        style = MaterialTheme.typography.titleMedium,
+                        color = Color.Red,
+                        modifier = Modifier.padding(end = 10.dp)
+                    )
+                }
+            }
+        }
+    }
 }
-
 @Composable
-fun Greeting3(name: String) {
-    Text(
-        text = " $name",
-        modifier = Modifier
-            .padding(
-                start = 10.dp,
-                end = 10.dp,
-                bottom = 40.dp,)
-            .fillMaxWidth(),
-
-        color = Color.LightGray,
-        fontSize = 20.sp,
-        fontWeight = FontWeight.Bold,
-        textAlign = TextAlign.Center,
 
-        )
+fun HomeScreenPreview() {
+    HomeScreen(navigationController = rememberNavController())
 }
+
+fun navDonHang(context: Context){
+    val intent = Intent(context, DetailProduct::class.java)
+    context.startActivity(intent)
+}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Kotlin_SU24_Group5\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".Test\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".DetailProduct\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".Login\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".SignIn\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".SignUp\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".Menu\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".Google\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".Support\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".HomeAdmin\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".ManHinhChao\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".ManagerAdmin\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/Theme.Kotlin_SU24_Group5\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -12,15 +12,7 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.Kotlin_SU24_Group5"
         tools:targetApi="31">
-        <activity
-            android:name=".Test"
-            android:exported="true">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
+
         <activity
             android:name=".DetailProduct"
             android:exported="true">
@@ -84,8 +76,9 @@
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+
         <activity
-            android:name=".HomeAdmin"
+            android:name=".ManHinhChao"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -94,7 +87,7 @@
             </intent-filter>
         </activity>
         <activity
-            android:name=".ManHinhChao"
+            android:name=".QLLoaiMonScreen"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -111,6 +104,25 @@
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+        <activity
+            android:name=".Dish.ListDish"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".Dish.AddDish"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+
         <activity
             android:name=".MainActivity"
             android:exported="true"
